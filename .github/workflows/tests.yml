name: Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      mysql-service:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: secret
          MYSQL_DATABASE: h2l_tests
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432/tcp
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 3

    steps:
      - name: GitHub Actions
        uses: actions/checkout@v2

      - name: Create mongo Docker container
        id: build_mongo_docker
        uses: DigiPie/mongo-action@v1.0.1
        with:
          image_version: latest
          port: 27017

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: mysql, pgsql
          coverage: xdebug

      - name: Validate composer.json and composer.lock
        run: composer validate --strict

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: Run PHPStan
        run: ./vendor/bin/phpstan.phar analyse -c phpstan.neon --no-interaction --no-progress

      - name: Set Postgres connection
        run: echo "<?php return ['scheme'=>'pgsql','host'=>'127.0.0.1','user'=>'postgres','pass'=>'postgres','db'=>'postgres', 'port' => '${{ job.services.postgres.ports['5432'] }}'];" > tests/config/pdo_pgsql_connection.php

      - name: Test Postgres connection
        run: pg_isready -d postgres -h 127.0.0.1 -p ${{ job.services.postgres.ports['5432'] }} -U postgres

      - name: Initiate Postgres DB
        run: export PGPASSWORD='postgres'; psql -h 127.0.0.1 -p ${{ job.services.postgres.ports['5432'] }} -d postgres -U postgres -a -f tests/config/tests_init_pgsql.sql

      - name: Set MySQL connection
        run: echo "<?php return ['host'=>'127.0.0.1','user'=>'root','db'=>'h2l_tests', 'port' => '3306', 'pass' => 'secret'];" > tests/config/pdo_mysql_connection.php

      - name: Check MySQL connection
        run: mysql -h 127.0.0.1 --port 3306 -u root -psecret -e 'SHOW DATABASES;'

      - name: Set up Test database
        run: mysql -h 127.0.0.1 --port 3306 -u root -psecret < tests/config/tests_init_mysql.sql

      - name: Run Test Suite
        run: ./bin/runtests
      # run: ./bin/runtests --coverage-clover tests/clover.xml
      # NO test coverage in PHP 8
      # - name: Confirm Test Coverage over 95 percent
      #   run: ./bin/coverage tests/clover.xml 95

      # - name: Confirm Test Coverage over 95 percent
      #   run: ./bin/coverage tests/clover.xml 95
